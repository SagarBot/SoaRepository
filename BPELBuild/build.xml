<?xml version="1.0" encoding="iso-8859-1"?>
<project name="soaDeployAll" basedir="." default="help">
  <property environment="env"/>
  <property name="sca.location" value="${basedir}/"/>
    <path id="classpath">
        <!-- To refer the all the jars inside folder lib-->
        <fileset dir="${basedir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>
 <taskdef resource="net/sf/antcontrib/antcontrib.properties" uri="http://ant-contrib.sourceforge.net">
    <classpath>
        <pathelement location="${basedir}/lib/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>
  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
            <pathelement location="${basedir}/lib/ant-contrib-1.0b3.jar"/>
        </classpath>
  </taskdef>
 
 
  <!-- ================================================================================ -->
  <!-- TARGET: help                                                                     -->
  <!-- ================================================================================ -->
 
  <target name="help">
    <echo>
    ------------------------------------------------------
    |   Usage example:                                  |
    ------------------------------------------------------
    ant help -verbose
    ant deployComposites -verbose
    ant undeployComposites -verbose
    ant listDeployedComposites -verbose
	ant importMDSArtifacts -verbose
	ant deleteMDSArtifacts -verbose
	ant exportMDS -verbose
    </echo>
 
  </target>
 
 
  <!-- ================================================================================ -->
  <!-- Check for an load property files                                                 -->
  <!-- ================================================================================ -->
 
  <available file="build.properties" property="file.exists" value="true" />
  <fail unless="file.exists" message="ERROR: Filename 'build.properties' does not exist." />
  <property file="build.properties"/> 
  <!-- ================================================================================ -->
  <!-- TARGET: deployComposites                                                         -->
  <!-- ================================================================================ -->
 
  <target name="deployComposites">
     
    <available file="${project.file.name}" property="file.exists" value="true" />
    <fail unless="file.exists" message="ERROR: Filename '${project.file.name}' does not exist."/>
    <loadfile property="allprocesses" srcFile="${project.file.name}"/>
 
    <var name="errorCount" value="0"/>
    <var name="processCount" value="0"/>
    <var name="errorProcessNames" value="(none)"/>
    <if>
        <equals arg1="${replace.env.prop}" arg2="true"/>
        <then>
            <antcall target="replace"/>
        </then>
    </if>
     
    <trycatch property="tryName" reference="exception_ref">
      <try>
        <for list="${allprocesses}" param="processName" delimiter="${line.separator}">
          <sequential>
         <propertyregex property="composite.name"      input="@{processName}" regexp="([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)" select="\1" override="true"/>
            <propertyregex property="composite.partition" input="@{processName}" regexp="([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)" select="\2" override="true"/>
            <propertyregex property="composite.revision"  input="@{processName}" regexp="([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)" select="\3" override="true"/>
            <propertyregex property="default.composite"   input="@{processName}" regexp="([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)" select="\4" override="true"/>
            <propertyregex property="project.location"         input="@{processName}" regexp="([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)" select="\5" override="true"/>
            <math result="processCount" operand1="${processCount}" operation="+" operand2="1" datatype="int"/>
            
            <echo>			
            
             ===================================================================================
                PACKAGE COMPOSITE #${processCount}: ${composite.name} ${composite.revision}
             ===================================================================================
			 
            </echo>
            <copy todir="${project.location}/SCA-INF/classes/META-INF/" file="${basedir}/includes/adf-config.xml" overwrite="true"/>
             
            <ant antfile="${oracle.home}/bin/ant-sca-package.xml" target="package" inheritall="false">
              <property name="oracle.home" value="${oracle.home}"/>  
              <property name="compositeDir" value="${project.location}"/>
              <property name="scac.application.home" value="${project.location}"/>
              <property name="scac.input" value="${project.location}/composite.xml"/>
              <property name="compositeName" value="${composite.name}"/>
              <property name="revision" value="${composite.revision}"/>
              <property name="java.passed.home" value="${java.home}"/>
              <property name="wl_home" value="${wl_home}"/>
            </ant>
 
            <echo>
             ================================================================================
                 DEPLOY COMPOSITE #${processCount}: ${composite.name}
             ================================================================================
            </echo>
	
			<propertycopy name="deploy.user" from="${deployment.plan.environment}.server.user"/>
			<propertycopy name="deploy.password" from="${deployment.plan.environment}.server.password"/>
			<propertycopy name="deploy.serverURL" from="${deployment.plan.environment}.serverURL"/>
			
            <ant antfile="${oracle.home}/bin/ant-sca-deploy.xml" target="deploy" inheritall="false">
              <property name="user"      value="${deploy.user}"/>
              <property name="password"  value="${deploy.password}"/>
              <property name="serverURL"     value="${deploy.serverURL}"/>
              <property name="sarLocation"   value="${project.location}/deploy/sca_${composite.name}_rev${composite.revision}.jar"/>
              <property name="overwrite"     value="true"/>
			  <property name="keepInstancesOnRedeploy"     value="false"/>
              <!--property name="configplan"     value="${project.location}/cfgplan/${composite.name}_cfgplan_${deployment.plan.environment}.xml"/-->
            </ant>
 
            <sleep seconds="3" />
          </sequential>
        </for>
      </try>
      <catch>
        <property name="exception" refid="exception_ref" />
        <property name="message" value="ERROR IN TRYCATCH BLOCK:${line.separator}${exception}" />
        <echo></echo>
        <echo message="${message}" />
        <math result="errorCount" operand1="${errorCount}" operation="+" operand2="1" datatype="int"/>
        <var name="errorProcessNames" value="${composite.name}"/>
      </catch>
    </trycatch>
 
    <echo>
        **************************************************************
        *  ANT TARGET NAME  : deployComposites
        *  FAILED PROCESS   : ${errorProcessNames}
        *
        **************************************************************
    </echo>
  </target>
 
 
  <!-- ================================================================================ -->
  <!-- TARGET: undeployComposites                                                       -->
  <!-- ================================================================================ -->
 
  <target name="undeployComposites">
 
    <available file="${project.file.name}" property="file.exists" value="true" />
    <fail unless="file.exists" message="ERROR: Filename '${project.file.name}' does not exist." />
    <loadfile property="allprocesses" srcFile="${project.file.name}"/>
 
    <var name="errorCount" value="0"/>
    <var name="processCount" value="0"/>
    <var name="errorProcessNames" value="*"/>
 
    <for list="${allprocesses}" param="processName" delimiter="${line.separator}">
      <sequential>
        <propertyregex property="composite.name"      input="@{processName}" regexp="([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)" select="\1" override="true"/>
        <propertyregex property="composite.partition" input="@{processName}" regexp="([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)" select="\2" override="true"/>
        <propertyregex property="composite.revision"  input="@{processName}" regexp="([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)" select="\3" override="true"/>
        <math result="processCount" operand1="${processCount}" operation="+" operand2="1" datatype="int"/>
 
        <trycatch property="tryName" reference="exception_ref">
          <try>
 
            <echo>
            ================================================================================
            UNDEPLOY COMPOSITE #${processCount}: ${composite.name}
            ================================================================================
            </echo>
			<propertycopy name="deploy.user" from="${deployment.plan.environment}.server.user"/>
			<propertycopy name="deploy.password" from="${deployment.plan.environment}.server.password"/>
			<propertycopy name="deploy.serverURL" from="${deployment.plan.environment}.serverURL"/>
			
			
            <ant antfile="${oracle.home}/bin/ant-sca-deploy.xml" target="undeploy" inheritall="false">
              <property name="user"             value="${deploy.user}"/>
              <property name="password"         value="${deploy.password}"/>
              <property name="serverURL"        value="${deploy.serverURL}"/>
              <property name="compositeName"    value="${composite.name}"/>
              <property name="partition"        value="${composite.partition}"/>
              <property name="revision"         value="${composite.revision}"/>
            </ant>
          </try>
          <catch>
            <property name="exception" refid="exception_ref" />
            <property name="message" value="ERROR IN TRYCATCH BLOCK:${line.separator}${exception}" />
            <echo></echo>
            <echo message="${message}" />
            <math result="errorCount" operand1="${errorCount}" operation="+" operand2="1" datatype="int"/>
            <var name="errorProcessNames" value="${errorProcessNames}${line.separator}*     ${composite.name}"/>
          </catch>
        </trycatch>
        <sleep seconds="1" />
      </sequential>
    </for>
    <echo>
        ***********************************************************************************
        *
        *   ANT TARGET NAME        : undeployComposites
        *   TOTAL NUMBER OF ERRORS : ${errorCount} of ${processCount} processes
        *   FAILED PROCESSES       : ${errorProcessNames}
        *
        ***********************************************************************************
    </echo>
  </target>
 
  <!-- ================================================================================ -->
  <!-- TARGET: listDeployedComposites                                                   -->
  <!-- ================================================================================ -->
 
  <target name="listDeployedComposites">
    <trycatch property="tryName" reference="exception_ref">
          <try>
			<propertycopy name="deploy.user" from="${deployment.plan.environment}.server.user"/>
			<propertycopy name="deploy.password" from="${deployment.plan.environment}.server.password"/>
			<propertycopy name="deploy.host" from="${deployment.plan.environment}.server.host"/>
			<propertycopy name="deploy.port" from="${deployment.plan.environment}.server.port"/>
			
            <ant antfile="${oracle.home}/bin/ant-sca-mgmt.xml" target="listDeployedComposites" inheritall="false">
              <property name="host"  value="${deploy.host}"/>
              <property name="port"  value="${deploy.port}"/>
              <property name="user"  value="${deploy.user}"/>
              <property name="password"  value="${deploy.password}"/>
            </ant>
          </try>
          <catch>
             <property name="exception" refid="exception_ref" />
             <property name="message" value="ERROR IN TRYCATCH BLOCK:${line.separator}${exception}" />
             <echo>=========================</echo>
             <echo message="${message}" />
          </catch>
      </trycatch>    
  </target>
    <!-- ================================================================================ -->
  <!-- TARGET: startComposites                                                          -->
  <!-- ================================================================================ -->

  <target name="startComposites">

    <available file="${project.file.name}" property="file.exists" value="true" />
    <fail unless="file.exists" message="ERROR: Filename '${project.file.name}' does not exist." />
    <loadfile property="allprocesses" srcFile="${project.file.name}"/>

    <var name="errorCount" value="0"/>
    <var name="processCount" value="0"/>
    <var name="errorProcessNames" value="*"/>

    <for list="${allprocesses}" param="processName" delimiter="${line.separator}">
      <sequential>
        <propertyregex property="composite.name"      input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\1" override="true"/>
        <propertyregex property="composite.partition" input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\2" override="true"/>
        <propertyregex property="composite.revision"  input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\3" override="true"/>
        <math result="processCount" operand1="${processCount}" operation="+" operand2="1" datatype="int"/>

        <echo>
		================================================================================
		START COMPOSITE #${processCount}: ${composite.name}
		================================================================================
        </echo>
		
		<propertycopy name="deploy.user" from="${deployment.plan.environment}.server.user"/>
		<propertycopy name="deploy.password" from="${deployment.plan.environment}.server.password"/>
		<propertycopy name="deploy.host" from="${deployment.plan.environment}.server.host"/>
		<propertycopy name="deploy.port" from="${deployment.plan.environment}.server.port"/>
		
        <ant antfile="${oracle.home}/bin/ant-sca-mgmt.xml" target="startComposite" inheritall="false">
			<property name="host"  value="${deploy.host}"/>
            <property name="port"  value="${deploy.port}"/>
            <property name="user"  value="${deploy.user}"/>
            <property name="password"  value="${deploy.password}"/>
			<property name="compositeName"    value="${composite.name}"/>
			<property name="partition"        value="${composite.partition}"/>
			<property name="revision"         value="${composite.revision}"/>
        </ant>

      </sequential>
    </for>
  </target>


  <!-- ================================================================================ -->
  <!-- TARGET: stopComposites                                                           -->
  <!-- ================================================================================ -->

  <target name="stopComposites">

    <available file="${project.file.name}" property="file.exists" value="true" />
    <fail unless="file.exists" message="ERROR: Filename '${project.file.name}' does not exist." />
    <loadfile property="allprocesses" srcFile="${project.file.name}"/>

    <var name="errorCount" value="0"/>
    <var name="processCount" value="0"/>
    <var name="errorProcessNames" value="*"/>

    <for list="${allprocesses}" param="processName" delimiter="${line.separator}">
      <sequential>
        <propertyregex property="composite.name"      input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\1" override="true"/>
        <propertyregex property="composite.partition" input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\2" override="true"/>
        <propertyregex property="composite.revision"  input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\3" override="true"/>
        <math result="processCount" operand1="${processCount}" operation="+" operand2="1" datatype="int"/>

        <echo>
		================================================================================
		STOP COMPOSITE #${processCount}: ${composite.name}
		================================================================================
        </echo>
		
		<propertycopy name="deploy.user" from="${deployment.plan.environment}.server.user"/>
		<propertycopy name="deploy.password" from="${deployment.plan.environment}.server.password"/>
		<propertycopy name="deploy.host" from="${deployment.plan.environment}.server.host"/>
		<propertycopy name="deploy.port" from="${deployment.plan.environment}.server.port"/>
		
        <ant antfile="${oracle.home}/bin/ant-sca-mgmt.xml" target="stopComposite" inheritall="false">
          <property name="host"  value="${deploy.host}"/>
          <property name="port"  value="${deploy.port}"/>
          <property name="user"  value="${deploy.user}"/>
          <property name="password"  value="${deploy.password}"/>
          <property name="compositeName"    value="${composite.name}"/>
          <property name="partition"        value="${composite.partition}"/>
          <property name="revision"         value="${composite.revision}"/>
        </ant>

      </sequential>
    </for>
  </target>


  <!-- ================================================================================ -->
  <!-- TARGET: detokenizeComposites                                                     -->
  <!-- ================================================================================ -->

  <target name="detokenizeComposites">

    <available file="${customProcessList}" property="file.exists" value="true" />
    <fail unless="file.exists" message="ERROR: Filename '${customProcessList}' does not exist." />
    <loadfile property="allprocesses" srcFile="${customProcessList}"/>

    <var name="errorCount" value="0"/>
    <var name="processCount" value="0"/>
    <var name="errorProcessNames" value="*"/>

    <for list="${allprocesses}" param="processName" delimiter="${line.separator}">
      <sequential>
        <propertyregex property="composite.name"      input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*),(.*)" select="\1" override="true"/>
        <propertyregex property="composite.partition" input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*),(.*)" select="\2" override="true"/>
        <propertyregex property="composite.revision"  input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*),(.*)" select="\3" override="true"/>
        <propertyregex property="default.composite"   input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*),(.*)" select="\4" override="true"/>
        <propertyregex property="folder.name"         input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*),(.*)" select="\5" override="true"/>
        <math result="processCount" operand1="${processCount}" operation="+" operand2="1" datatype="int"/>

        <echo>
		================================================================================
		DETOKENIZE COMPOSITE #${processCount}: ${composite.name}
		================================================================================
        </echo>

        <delete file="${svn.localdir}/${folder.name}/SCA-INF/classes/META-INF/adf-config.xml"/>
        <copy file="includes/adf-config.xml" todir="${svn.localdir}/${folder.name}/SCA-INF/classes/META-INF"/>

        <replace dir="${svn.localdir}/${folder.name}" summary="true">
          <include name="**/*.wsdl"/>
          <include name="**/*.xsd"/>
          <include name="**/*.xml"/>
          <include name="**/*.xsl"/>
          <include name="**/*.bpel"/>
          <include name="**/*.esbsvc"/>
          <include name="**/*.mplan"/>
          <include name="**/*.componentType"/>
          <include name="**/*.esbsys"/>
          <include name="**/*.esbgrp"/>
          <replacefilter token="@SOAServer@"              value="${SOAServer}"/>
          <replacefilter token="@MDSSchema@"            value="${MDSSchema}"/>
          <replacefilter token="@MDSPassword@"            value="${MDSPassword}"/>
          <replacefilter token="@MDSJDBCConnection@"            value="${MDSJDBCConnection}"/>
        </replace>

      </sequential>
    </for>

  </target>


  <!-- ================================================================================ -->
  <!-- TARGET: tokenizeComposites                                                       -->
  <!-- ================================================================================ -->

  <target name="tokenizeComposites">

    <available file="${customProcessList}" property="file.exists" value="true" />
    <fail unless="file.exists" message="ERROR: Filename '${customProcessList}' does not exist." />
    <loadfile property="allprocesses" srcFile="${customProcessList}"/>

    <var name="errorCount" value="0"/>
    <var name="processCount" value="0"/>
    <var name="errorProcessNames" value="*"/>

    <for list="${allprocesses}" param="processName" delimiter="${line.separator}">
      <sequential>
        <propertyregex property="composite.name"      input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\1" override="true"/>
        <propertyregex property="composite.partition" input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\2" override="true"/>
        <propertyregex property="composite.revision"  input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\3" override="true"/>
        <propertyregex property="default.composite"   input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\4" override="true"/>
        <propertyregex property="folder.name"         input="@{processName}" regexp="(.*),(.*),(.*),(.*),(.*)" select="\5" override="true"/>
        <math result="processCount" operand1="${processCount}" operation="+" operand2="1" datatype="int"/>

        <echo>
		================================================================================
		TOKENIZE COMPOSITE #${processCount}: ${composite.name}
		================================================================================
        </echo>

        <delete file="${svn.localdir}/${folder.name}/SCA-INF/classes/META-INF/adf-config.xml"/>
        <copy file="includes/adf-config.xml" todir="${svn.localdir}/${folder.name}/SCA-INF/classes/META-INF"/>

        <replace dir="${svn.localdir}/${folder.name}" summary="true">
          <include name="**/*.wsdl"/>
          <include name="**/*.xsd"/>
          <include name="**/*.xml"/>
          <include name="**/*.xsl"/>
          <include name="**/*.bpel"/>
          <include name="**/*.esbsvc"/>
          <include name="**/*.esbsys"/>
          <include name="**/*.esbgrp"/>
          <include name="**/*.mplan"/>
          <include name="**/*.componentType"/>
          <replacefilter token="${SOAServer}"                    value="@SOAServer@"/>
          <replacefilter token="${MDSSchema}"                    value="@MDSSchema@"/>
          <replacefilter token="${MDSPassword}"                  value="@MDSPassword@"/>
          <replacefilter token="${MDSJDBCConnection}"            value="@MDSJDBCConnection@"/>
        </replace>

      </sequential>
    </for>

  </target>

  
  <!-- ================================================================================ -->
  <!-- TARGET: importMDSArtifacts                                                       -->
  <!-- ================================================================================ -->

  <target name="importMDSArtifacts">

    <available file="${customMDSList}" property="file.exists" value="true" />
    <fail unless="file.exists" message="ERROR: Filename '${customMDSList}' does not exist." />
    <loadfile property="allprocesses" srcFile="${customMDSList}"/>

    <var name="processCount" value="0"/>

    <for list="${allprocesses}" param="processName" delimiter="${line.separator}">
      <sequential>
        <propertyregex property="mds.applications" input="@{processName}" regexp="(.*),(.*)" select="\1" override="true"/>
        <propertyregex property="mds.undeploy" 	   input="@{processName}" regexp="(.*),(.*)" select="\2" override="true"/>
        <math result="processCount" operand1="${processCount}" operation="+" operand2="1" datatype="int"/>

        <echo>
================================================================================
DEPLOY ARTIFACT #${processCount}: ${mds.applications}
================================================================================
        </echo>

        <foreach list="${mds.applications}" param="mds.application" target="importMDSArtifact" inheritall="true" inheritrefs="false"/>

      </sequential>
    </for>
  </target>


  <!-- ================================================================================ -->
  <!-- TARGET: importMDSArtifact                                                        -->
  <!-- ================================================================================ -->
  <target name="importMDSArtifact">

    <property name="mds.deploy.dir" value="${tmp.output.dir}/${mds.application}"/>

    <delete dir="${mds.deploy.dir}"/>
    <mkdir dir="${mds.deploy.dir}"/>

    <zip destfile="${mds.deploy.dir}/${mds.application}_mds.jar" compress="false">
      <fileset dir="${local.mds.repository}" includes="${mds.application}/**"/>
    </zip>

    <zip destfile="${mds.deploy.dir}/${mds.application}_mds.zip" compress="false">
      <fileset dir="${mds.deploy.dir}" includes="*.jar"/>
    </zip>

    <echo>SAR File: ${mds.deploy.dir}/${mds.application}_mds.zip</echo>
	
	
			<propertycopy name="deploy.user" from="${deployment.plan.environment}.server.user"/>
			<propertycopy name="deploy.password" from="${deployment.plan.environment}.server.password"/>
			<propertycopy name="deploy.serverURL" from="${deployment.plan.environment}.serverURL"/>

    <ant antfile="${oracle.home}/bin/ant-sca-deploy.xml" inheritAll="false" target="deploy">
       <property name="wl_home" 	value="${wl_home}"/>
       <property name="oracle.home" 	value="${oracle.home}"/>
       <property name="serverURL" 	value="${deploy.serverURL}"/>
       <property name="user" 		value="${deploy.user}"/>
       <property name="password" 	value="${deploy.password}"/>
       <property name="overwrite" 	value="true"/>
       <property name="forceDefault" 	value="true"/>
       <property name="sarLocation" 	value="${mds.deploy.dir}/${mds.application}_mds.zip"/>
    </ant>

  </target>

  
  
  
    <!-- ================================================================================ -->
  <!-- TARGET: deleteMDSArtifact                                                      -->
  <!-- ================================================================================ -->

  <target name="deleteMDSArtifact">
  
			<propertycopy name="deploy.user" from="${deployment.plan.environment}.server.user"/>
			<propertycopy name="deploy.password" from="${deployment.plan.environment}.server.password"/>
			<propertycopy name="deploy.serverURL" from="${deployment.plan.environment}.serverURL"/>

    <ant antfile="${oracle.home}/bin/ant-sca-deploy.xml" inheritAll="false" target="removeSharedData">
      <property name="wl_home" 		value="${wl_home}"/>
      <property name="oracle.home" 	value="${oracle.home}"/>
      <property name="serverURL" 	value="${deploy.serverURL}"/>
      <property name="user" 		value="${deploy.user}"/>
      <property name="password" 	value="${deploy.password}"/>
      <property name="folderName" 	value="${mds.application}"/>
    </ant>

  </target>
  
  
  <!-- ================================================================================ -->
  <!-- TARGET: deleteMDSArtifacts                                                       -->
  <!-- ================================================================================ -->

  <target name="deleteMDSArtifacts">

    <available file="${customMDSList}" property="file.exists" value="true" />
    <fail unless="file.exists" message="ERROR: Filename '${customMDSList}' does not exist." />
    <loadfile property="allprocesses" srcFile="${customMDSList}"/>

    <var name="processCount" value="0"/>

    <for list="${allprocesses}" param="processName" delimiter="${line.separator}">
      <sequential>
        <propertyregex property="mds.applications" input="@{processName}" regexp="(.*),(.*)" select="\1" override="true"/>
        <math result="processCount" operand1="${processCount}" operation="+" operand2="1" datatype="int"/>

        <echo>
================================================================================
UNDEPLOY ARTIFACT #${processCount}: ${mds.applications}
================================================================================
        </echo>

        <foreach list="${mds.applications}" param="mds.application" target="deleteMDSArtifact" inheritall="true" inheritrefs="false"/>

      </sequential>
    </for>

  </target>
  
  
    <!-- ================================================================================ -->
  <!-- TARGET: exportMDS                                                                -->
  <!-- ================================================================================ -->

  <target name="exportMDS">

    <tstamp>
      <format property="start.timestamp" pattern="yyyy-MM-dd_HHmm" />
    </tstamp>

    <echo>
================================================================================
EXPORT MDS: ${local.mds.repository}/MDSbackup.${deployment.plan.environment}.${start.timestamp}.jar
================================================================================
    </echo>

			<propertycopy name="deploy.user" from="${deployment.plan.environment}.server.user"/>
			<propertycopy name="deploy.password" from="${deployment.plan.environment}.server.password"/>
			<propertycopy name="deploy.serverURL" from="${deployment.plan.environment}.serverURL"/>
   
   <ant antfile="${oracle.home}/bin/ant-sca-deploy.xml" inheritAll="false" target="exportSharedData">

      <property name="serverURL"        value="${deploy.serverURL}"/>
      <property name="jarFile"          value="${local.mds.repository}/MDSbackup.${deployment.plan.environment}.${start.timestamp}.jar"/>
      <property name="pattern"          value="**"/>
      <property name="user"             value="${deploy.user}"/>
      <property name="password"         value="${deploy.password}"/>
    </ant>

  </target>
  
  
</project>